import io.papermc.paperweight.userdev.ReobfArtifactConfiguration

plugins {
    id 'java'
    id 'io.papermc.paperweight.userdev' version '2.0.0-beta.17'
    id 'com.gradleup.shadow' version '8.3.5'
}

group = 'me.hsgamer'
version = '1.11.0'
def snapshot = true
description = 'A (temporary) world manager for Folia'

if (snapshot) {
    version = version + "-SNAPSHOT"
}

def versionFile = file("version")
if (!versionFile.exists()) {
    throw new GradleException("version file not found")
}
def serverVersion = versionFile.text.trim()
def majorServerVersion = serverVersion.count('.') > 1 ? serverVersion.substring(0, serverVersion.lastIndexOf('.')) : serverVersion

repositories {
    mavenCentral()
    maven {
        name = "folia-inquistors-repo"
        url = "https://folia-inquisitors.github.io/FoliaDevBundle/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

paperweight {
    paperweight.setReobfArtifactConfiguration(ReobfArtifactConfiguration.getMOJANG_PRODUCTION())
}

dependencies {
    paperweight.foliaDevBundle("$serverVersion-R0.1-SNAPSHOT")

    def core = "4.5.7"
    implementation "me.hsgamer:hscore-bukkit-config:$core"
    implementation "me.hsgamer:hscore-bukkit-utils:$core"
    implementation "me.hsgamer:hscore-config-proxy:$core"
    implementation "me.hsgamer:hscore-common:$core"

    def minelib = "1.2.5"
    implementation "io.github.projectunified:minelib-plugin-base:$minelib"
    implementation "io.github.projectunified:minelib-plugin-listener:$minelib"
    implementation "io.github.projectunified:minelib-plugin-permission:$minelib"
    implementation "io.github.projectunified:minelib-plugin-command:$minelib"
    implementation "io.github.projectunified:minelib-util-subcommand:$minelib"
}

assemble {
    dependsOn shadowJar
}

shadowJar {
    relocate("me.hsgamer.hscore", "me.hsgamer.morefoworld.core")
    relocate("io.github.projectunified.minelib", "me.hsgamer.morefoworld.minelib")
    minimize()
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [
            version    : version,
            name       : project.name,
            apiVersion : majorServerVersion,
            description: project.description
    ]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
